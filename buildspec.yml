version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION=us-east-1
      - REPO_FRONTEND=my-frontend-app
      - REPO_BACKEND=my-backend-app
      - FRONTEND_URI=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_FRONTEND
      - BACKEND_URI=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPO_BACKEND
      - echo $FRONTEND_URI
      - echo $BACKEND_URI
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com

  build:
    commands:
      - echo Build React frontend Docker image...
      - cd frontend
      - docker build -t $FRONTEND_URI .
      - cd ..

      - echo Build Spring Boot backend Docker image...
      - cd backend
      - mvn package -DskipTests
      - docker build -t $BACKEND_URI .
      - cd ..

  post_build:
    commands:
      - echo Pushing Docker images to ECR...
      - docker push $FRONTEND_URI
      - docker push $BACKEND_URI

      - echo SSH to EC2 and deploy Docker containers...
      - aws ssm get-parameter --name /ec2/key-pair --with-decryption --query 'Parameter.Value' --output text > ec2-key.pem
      - chmod 400 ec2-key.pem

      - |
        ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@34.229.200.248 <<EOF
          aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
          docker pull $FRONTEND_URI
          docker pull $BACKEND_URI
          docker stop frontend || true && docker rm frontend || true
          docker stop backend || true && docker rm backend || true
          docker run -d --name frontend -p 80:80 $FRONTEND_URI
          docker run -d --name backend -p 8080:8080 $BACKEND_URI
        EOF
